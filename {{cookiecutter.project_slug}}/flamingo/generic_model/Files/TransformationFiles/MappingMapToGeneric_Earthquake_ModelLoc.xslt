<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="vmf agt xs">
	<xsl:template name="vmf:vmf1_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf2_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf3_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf4_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf5_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf6_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf7_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf8_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf9_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf10_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input=true()">
				<xsl:value-of select="'1'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'0'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToGeneric_Earthquake_ModelLoc_var46_create_rec">
		<xsl:param name="var45_current"/>
		<rec>
			<xsl:variable name="var1_ROWID">
				<xsl:if test="$var45_current/@ROW_ID">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var1_ROWID))) != 'false'">
				<xsl:attribute name="ROW_ID">
					<xsl:value-of select="string($var45_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var2_POSTALCODE">
				<xsl:if test="$var45_current/@POSTALCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var2_POSTALCODE))) != 'false'">
				<xsl:attribute name="POSTALCODE">
					<xsl:value-of select="string($var45_current/@POSTALCODE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var3_COUNTY">
				<xsl:if test="$var45_current/@COUNTY">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var3_COUNTY))) != 'false'">
				<xsl:attribute name="COUNTY">
					<xsl:value-of select="string($var45_current/@COUNTY)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var4_COUNTYCODE">
				<xsl:if test="$var45_current/@COUNTYCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var4_COUNTYCODE))) != 'false'">
				<xsl:attribute name="COUNTYCODE">
					<xsl:value-of select="string($var45_current/@COUNTYCODE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var5_CRESTA">
				<xsl:if test="$var45_current/@CRESTA">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var5_CRESTA))) != 'false'">
				<xsl:attribute name="CRESTA">
					<xsl:value-of select="string($var45_current/@CRESTA)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var6_CITY">
				<xsl:if test="$var45_current/@CITY">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var6_CITY))) != 'false'">
				<xsl:attribute name="CITY">
					<xsl:value-of select="string($var45_current/@CITY)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var7_CITYCODE">
				<xsl:if test="$var45_current/@CITYCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var7_CITYCODE))) != 'false'">
				<xsl:attribute name="CITYCODE">
					<xsl:value-of select="string($var45_current/@CITYCODE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var8_STATE">
				<xsl:if test="$var45_current/@STATE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var8_STATE))) != 'false'">
				<xsl:attribute name="STATE">
					<xsl:value-of select="string($var45_current/@STATE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var9_STATECODE">
				<xsl:if test="$var45_current/@STATECODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var9_STATECODE))) != 'false'">
				<xsl:attribute name="STATECODE">
					<xsl:value-of select="string($var45_current/@STATECODE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var10_ADDRMATCH">
				<xsl:if test="$var45_current/@ADDRMATCH">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var10_ADDRMATCH))) != 'false'">
				<xsl:attribute name="ADDRMATCH">
					<xsl:value-of select="string($var45_current/@ADDRMATCH)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var11_COUNTRY">
				<xsl:if test="$var45_current/@COUNTRY">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var11_COUNTRY))) != 'false'">
				<xsl:attribute name="COUNTRY">
					<xsl:value-of select="string($var45_current/@COUNTRY)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var12_COUNTRYGEOID">
				<xsl:if test="$var45_current/@COUNTRYGEOID">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var12_COUNTRYGEOID))) != 'false'">
				<xsl:attribute name="COUNTRYGEOID">
					<xsl:value-of select="string($var45_current/@COUNTRYGEOID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var13_CNTRYSCHEME">
				<xsl:if test="$var45_current/@CNTRYSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var13_CNTRYSCHEME))) != 'false'">
				<xsl:attribute name="CNTRYSCHEME">
					<xsl:value-of select="string($var45_current/@CNTRYSCHEME)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var14_CNTRYCODE">
				<xsl:if test="$var45_current/@CNTRYCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var14_CNTRYCODE))) != 'false'">
				<xsl:attribute name="CNTRYCODE">
					<xsl:value-of select="string($var45_current/@CNTRYCODE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var15_LATITUDE">
				<xsl:if test="$var45_current/@LATITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var15_LATITUDE))) != 'false'">
				<xsl:attribute name="LATITUDE">
					<xsl:value-of select="string($var45_current/@LATITUDE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var16_LONGITUDE">
				<xsl:if test="$var45_current/@LONGITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var16_LONGITUDE))) != 'false'">
				<xsl:attribute name="LONGITUDE">
					<xsl:value-of select="string($var45_current/@LONGITUDE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var17_BLDGSCHEME">
				<xsl:if test="$var45_current/@BLDGSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var17_BLDGSCHEME))) != 'false'">
				<xsl:attribute name="BLDGSCHEME">
					<xsl:value-of select="string($var45_current/@BLDGSCHEME)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var18_BLDGCLASS">
				<xsl:if test="$var45_current/@BLDGCLASS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var18_BLDGCLASS))) != 'false'">
				<xsl:attribute name="BLDGCLASS">
					<xsl:value-of select="string($var45_current/@BLDGCLASS)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var19_OCCSCHEME">
				<xsl:if test="$var45_current/@OCCSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var19_OCCSCHEME))) != 'false'">
				<xsl:attribute name="OCCSCHEME">
					<xsl:value-of select="string($var45_current/@OCCSCHEME)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var20_OCCTYPE">
				<xsl:if test="$var45_current/@OCCTYPE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var20_OCCTYPE))) != 'false'">
				<xsl:attribute name="OCCTYPE">
					<xsl:value-of select="string($var45_current/@OCCTYPE)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var21_YEARBUILT">
				<xsl:if test="$var45_current/@YEARBUILT">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var21_YEARBUILT))) != 'false'">
				<xsl:attribute name="YEARBUILT">
					<xsl:value-of select="string($var45_current/@YEARBUILT)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var22_YEARUPGRAD">
				<xsl:if test="$var45_current/@YEARUPGRAD">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var22_YEARUPGRAD))) != 'false'">
				<xsl:attribute name="YEARUPGRAD">
					<xsl:value-of select="string($var45_current/@YEARUPGRAD)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var23_NUMSTORIES">
				<xsl:if test="$var45_current/@NUMSTORIES">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var23_NUMSTORIES))) != 'false'">
				<xsl:attribute name="NUMSTORIES">
					<xsl:value-of select="string($var45_current/@NUMSTORIES)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var24_NUMBLDGS">
				<xsl:if test="$var45_current/@NUMBLDGS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var24_NUMBLDGS))) != 'false'">
				<xsl:attribute name="NUMBLDGS">
					<xsl:value-of select="string($var45_current/@NUMBLDGS)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var25_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV1VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var26_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf1_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV1VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var25_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV1">
					<xsl:value-of select="string($var26_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var27_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV2VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var28_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf2_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV2VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var27_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV2">
					<xsl:value-of select="string($var28_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var29_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV3VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var30_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf3_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV3VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var29_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV3">
					<xsl:value-of select="string($var30_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var31_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV4VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var32_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf4_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV4VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var31_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV4">
					<xsl:value-of select="string($var32_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var33_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV5VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var34_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf5_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV5VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var33_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV5">
					<xsl:value-of select="string($var34_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var35_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV6VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var36_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf6_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV6VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var35_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV6">
					<xsl:value-of select="string($var36_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var37_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV7VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var38_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf7_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV7VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var37_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV7">
					<xsl:value-of select="string($var38_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var39_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV8VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var40_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf8_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV8VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var39_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV8">
					<xsl:value-of select="string($var40_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var41_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV9VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var42_resultof_vmf__inputtoresult">
				<xsl:call-template name="vmf:vmf9_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV9VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var41_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV9">
					<xsl:value-of select="string($var42_resultof_vmf__inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var43_EQCVVAL">
				<xsl:if test="$var45_current/@EQCV10VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="var44_resultof_vmf___inputtoresult">
				<xsl:call-template name="vmf:vmf10_inputtoresult">
					<xsl:with-param name="input" select="(string($var45_current/@EQCV10VAL) &gt; string('0'))"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var43_EQCVVAL))) != 'false'">
				<xsl:attribute name="COV10">
					<xsl:value-of select="string($var44_resultof_vmf___inputtoresult)"/>
				</xsl:attribute>
			</xsl:if>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToGeneric_Earthquake_ModelLoc_var48_resultof_map">
		<xsl:param name="var47_current"/>
		<xsl:for-each select="$var47_current/rec">
			<xsl:call-template name="agt:MapToGeneric_Earthquake_ModelLoc_var46_create_rec">
				<xsl:with-param name="var45_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/Users/Administrator/Desktop/git/cookiecutter-OasisModel/{{cookiecutter.project_slug}}/flamingo/generic_model/ValidationFiles/Generic_Earthquake_ModelLoc.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToGeneric_Earthquake_ModelLoc_var48_resultof_map">
					<xsl:with-param name="var47_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
